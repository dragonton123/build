{
  "_args": [
    [
      {
        "raw": "react-d3-map-core@^0.13.3",
        "scope": null,
        "escapedName": "react-d3-map-core",
        "name": "react-d3-map-core",
        "rawSpec": "^0.13.3",
        "spec": ">=0.13.3 <0.14.0",
        "type": "range"
      },
      "/home/tadaomin/Project/reactwww/node_modules/react-d3-map-bubble"
    ]
  ],
  "_from": "react-d3-map-core@>=0.13.3 <0.14.0",
  "_id": "react-d3-map-core@0.13.7",
  "_inCache": true,
  "_location": "/react-d3-map-core",
  "_nodeVersion": "4.1.1",
  "_npmUser": {
    "name": "chilijung",
    "email": "chilijung@gmail.com"
  },
  "_npmVersion": "2.14.4",
  "_phantomChildren": {
    "core-js": "1.2.7",
    "envify": "3.4.1",
    "loose-envify": "1.3.1",
    "promise": "7.3.1",
    "ua-parser-js": "0.7.14"
  },
  "_requested": {
    "raw": "react-d3-map-core@^0.13.3",
    "scope": null,
    "escapedName": "react-d3-map-core",
    "name": "react-d3-map-core",
    "rawSpec": "^0.13.3",
    "spec": ">=0.13.3 <0.14.0",
    "type": "range"
  },
  "_requiredBy": [
    "/react-d3-map-bubble"
  ],
  "_resolved": "https://registry.npmjs.org/react-d3-map-core/-/react-d3-map-core-0.13.7.tgz",
  "_shasum": "9ddae8c00076a24b901780d1bf14c6006ba0b909",
  "_shrinkwrap": null,
  "_spec": "react-d3-map-core@^0.13.3",
  "_where": "/home/tadaomin/Project/reactwww/node_modules/react-d3-map-bubble",
  "author": {
    "name": "ElixirDoc team"
  },
  "dependencies": {
    "d3": "^3.5.11",
    "queue-async": "^1.0.7",
    "react": "^0.14.3",
    "react-addons-css-transition-group": "^0.14.2",
    "react-faux-dom": "^2.1.0"
  },
  "description": "react-d3 map core component",
  "devDependencies": {
    "babel-core": "^5.8.24",
    "babel-jest": "^5.3.0",
    "babel-loader": "^5.3.2",
    "css-loader": "^0.18.0",
    "dsv-loader": "^1.0.0",
    "expect": "^1.13.3",
    "json-loader": "^0.5.3",
    "jsx-loader": "^0.13.2",
    "karma": "^0.13.15",
    "karma-chrome-launcher": "^0.2.1",
    "karma-cli": "^0.1.1",
    "karma-mocha": "^0.2.0",
    "karma-sourcemap-loader": "^0.3.6",
    "karma-webpack": "^1.7.0",
    "mocha": "^2.2.5",
    "react": "^0.14.3",
    "react-addons-test-utils": "^0.14.0",
    "react-dom": "^0.14.0",
    "react-hot-loader": "^1.3.0",
    "style-loader": "^0.12.4",
    "topojson": "^1.6.19",
    "webpack": "^1.12.2",
    "webpack-dev-server": "^1.11.0"
  },
  "directories": {},
  "dist": {
    "shasum": "9ddae8c00076a24b901780d1bf14c6006ba0b909",
    "tarball": "https://registry.npmjs.org/react-d3-map-core/-/react-d3-map-core-0.13.7.tgz"
  },
  "gitHead": "80853dd69da51421b9577e20b4e46c701b89957f",
  "jest": {
    "scriptPreprocessor": "./node_modules/babel-jest",
    "unmockedModulePathPatterns": [
      "./node_modules/react"
    ]
  },
  "license": "Apache 2.0",
  "main": "./lib/index.js",
  "maintainers": [
    {
      "name": "chihsuan",
      "email": "chihsuan.tw@gmail.com"
    },
    {
      "name": "chilijung",
      "email": "chilijung@gmail.com"
    }
  ],
  "name": "react-d3-map-core",
  "optionalDependencies": {},
  "peerDepencies": {
    "react": "^0.14.2"
  },
  "readme": "# react-d3-map-core\n\n[![Dependency Status](https://gemnasium.com/react-d3/react-d3-map-core.svg)](https://gemnasium.com/react-d3/react-d3-map-core)\n\nreact d3 map components for reusability. For now see example for usages.\n\n\n## Example\n\n#### With webpack build tools\n\n- Polygons\n\n```js\n\"use strict\";\n\nvar React = require('react');\nvar ReactDOM = require('react-dom');\nvar topojson = require('topojson');\nvar Chart = require('react-d3-map-core').Chart;\nvar Polygon = require('react-d3-map-core').Polygon;\nvar projectionFunc = require('react-d3-map-core').projection;\nvar geoPath = require('react-d3-map-core').geoPath;\n\n(function() {\n  var width = 960,\n  height = 960\n\n  var topodata = require('json!../data/world-50m.json');\n\n  var data = topojson.feature(topodata, topodata.objects.land);\n  var scale = (width + 1) / 2 / Math.PI;\n  var translate = [width / 2, height / 2];\n  var precision = .1;\n\n  var polygonClass = 'polygon-test';\n\n  var proj = projectionFunc({\n    projection: projection,\n    scale: scale,\n    translate: translate,\n    precision: precision\n  });\n  var geo = geoPath(proj);\n\n\n  ReactDOM.render(\n    <Chart\n      width= {width}\n      height= {height}\n    >\n      <Polygon\n        width= {width}\n        height= {height}\n        data= {data}\n        geoPath= {geo}\n        polygonClass={polygonClass}\n      />\n    </Chart>\n    , document.getElementById('blank-polygon')\n  )\n\n})()\n\n```\n\n## Components\n\n- Polygon\n- Point\n- PointText\n- Centroid\n- Circle\n- ChartContainer\n- Graticule\n- Mesh\n- Voronoi\n- Sphere\n- Svg\n- Title\n- Tile\n- VectorTile\n- Tooltip\n- Arc\n- Marker\n- Popup\n- zoomControl\n\n## Export functions\n\n- geoPath\n- graticule\n- projection\n- scale\n- isTooltipUpdate\n- tileFunc\n\n\n## Install\n\n```\nnpm install react-d3-map-core\n```\n\n## Setting tile animation\n\nfor tiles we use `ReactCSSTransitionGroup` for css animation. You can clone the css below to your html to have your tiles with animations while leaving and entering.\n\nOr you could simply clone the code in `react-d3-map.css`.\n\n```css\n.tiles-enter {\n  opacity: 0.01;\n}\n\n.tiles-enter.tiles-enter-active {\n  opacity: 1;\n  transition: opacity 500ms ease-in;\n}\n\n.tiles-leave {\n  opacity: 1;\n}\n\n.tiles-leave.tiles-leave-active {\n  opacity: 0.01;\n  transition: opacity 300ms ease-in;\n}\n```\n\n## License\n\nApache 2.0\n",
  "readmeFilename": "README.md",
  "scripts": {
    "build": "rm -rf ./lib && babel -w --stage 0 src --out-dir lib",
    "test": "karma start"
  },
  "version": "0.13.7"
}
