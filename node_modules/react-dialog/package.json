{
  "_args": [
    [
      {
        "raw": "react-dialog",
        "scope": null,
        "escapedName": "react-dialog",
        "name": "react-dialog",
        "rawSpec": "",
        "spec": "latest",
        "type": "tag"
      },
      "/home/tadaomin/Project/reactwww"
    ]
  ],
  "_from": "react-dialog@latest",
  "_id": "react-dialog@1.0.2",
  "_inCache": true,
  "_location": "/react-dialog",
  "_nodeVersion": "6.11.2",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/react-dialog-1.0.2.tgz_1507225048010_0.08215023367665708"
  },
  "_npmUser": {
    "name": "mohitgupta8888",
    "email": "mohitgupta8888@gmail.com"
  },
  "_npmVersion": "3.10.10",
  "_phantomChildren": {},
  "_requested": {
    "raw": "react-dialog",
    "scope": null,
    "escapedName": "react-dialog",
    "name": "react-dialog",
    "rawSpec": "",
    "spec": "latest",
    "type": "tag"
  },
  "_requiredBy": [
    "#USER",
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/react-dialog/-/react-dialog-1.0.2.tgz",
  "_shasum": "813fed40f49294679346a3298d460f7b98821801",
  "_shrinkwrap": null,
  "_spec": "react-dialog",
  "_where": "/home/tadaomin/Project/reactwww",
  "author": {
    "name": "Mohit Gupta",
    "email": "mohitgupta8888@gmail.com",
    "url": "https://github.com/mohitgupta"
  },
  "bugs": {
    "url": "https://github.com/mohitgupta8888/react-dialog/issues"
  },
  "dependencies": {
    "active-event-stack": "^1.0.0",
    "classnames": "^2.2.3",
    "react-draggable": "^2.2.6",
    "react-onclickoutside": "^5.10.0",
    "react-resizable": "^1.7.1"
  },
  "description": "Dialog component in react",
  "devDependencies": {
    "@kadira/storybook": "^1.11.0",
    "babel-cli": "^6.5.0",
    "babel-core": "^6.5.0",
    "babel-eslint": "^6.0.2",
    "babel-loader": "^6.2.4",
    "babel-plugin-transform-decorators-legacy": "^1.3.4",
    "babel-plugin-transform-runtime": "^6.5.0",
    "babel-polyfill": "^6.5.0",
    "babel-preset-es2015": "^6.5.0",
    "babel-preset-react": "^6.5.0",
    "babel-preset-stage-0": "^6.5.0",
    "babel-runtime": "^6.5.0",
    "chai": "^3.5.0",
    "css-loader": "^0.28.4",
    "enzyme": "^2.2.0",
    "eslint": "^2.7.0",
    "eslint-config-airbnb": "^8.0.0",
    "eslint-plugin-babel": "^3.2.0",
    "eslint-plugin-jsx-a11y": "^1.0.3",
    "eslint-plugin-react": "^5.0.1",
    "git-url-parse": "^6.0.1",
    "jsdom": "^8.3.1",
    "mocha": "^2.4.5",
    "raw-loader": "^0.5.1",
    "react": "^15.0.0",
    "react-addons-test-utils": "^15.0.0",
    "react-dom": "^15.0.0",
    "sinon": "^1.17.3",
    "style-loader": "^0.13.1",
    "url-loader": "^0.5.9"
  },
  "directories": {},
  "dist": {
    "shasum": "813fed40f49294679346a3298d460f7b98821801",
    "tarball": "https://registry.npmjs.org/react-dialog/-/react-dialog-1.0.2.tgz"
  },
  "engines": {
    "npm": "^3.0.0"
  },
  "gitHead": "4a7aa7a5b6dc63c6f392e058b712a5795a6093e4",
  "homepage": "https://mohitgupta8888.github.io/react-dialog/",
  "keywords": [
    "react",
    "dialog",
    "modal",
    "react-dialog",
    "react-modal",
    "react-popup",
    "dialog-popup",
    "bootstrap-modal",
    "modal-component"
  ],
  "license": "MIT",
  "main": "dist/index.js",
  "maintainers": [
    {
      "name": "mohitgupta8888",
      "email": "mohitgupta8888@gmail.com"
    }
  ],
  "name": "react-dialog",
  "optionalDependencies": {},
  "peerDependencies": {
    "react": "^0.14.7 || ^15.0.0"
  },
  "readme": "# React Dialog\r\n\r\nReact component for dialog widget.\r\n\r\n## Installation\r\n\r\nReact Dialog is available as an [npm package](https://www.npmjs.org/package/react-dialog).\r\n```sh\r\nnpm install react-dialog\r\n```\r\n\r\nUse [browserify](http://browserify.org/) and [reactify](https://github.com/andreypopp/reactify) for dependency management and JSX transformation.\r\n\r\nAll styles written in CSS and are in css/index.css\r\n\r\n## Demo\r\n\r\n[http://mohitgupta8888.github.io/react-dialog](https://mohitgupta8888.github.io/react-dialog/?selectedKind=React%20Dialog&selectedStory=basic&full=0&down=0&left=1&panelRight=0)\r\n\r\n## Usage\r\n\r\n```javascript\r\nimport Dialog from 'react-dialog'\r\nclass Example extends React.Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            isDialogOpen: false\r\n        }\r\n    }\r\n\r\n    openDialog = () => this.setState({ isDialogOpen: true })\r\n\r\n    handleClose = () => this.setState({ isDialogOpen: false })\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n                <button type=\"button\" onClick={this.openDialog}>Open Dialog</button>\r\n                {\r\n                    this.state.isDialogOpen &&\r\n                    <Dialog\r\n                        title=\"Dialog Title\"\r\n                        modal={true}\r\n                        onClose={this.handleClose}\r\n                        buttons={\r\n                            [{\r\n                                text: \"Close\",\r\n                                onClick: () => this.handleClose()\r\n                            }]\r\n                        }>\r\n                        <h1>Dialog Content</h1>\r\n                        <p>More Content. Anything goes here</p>\r\n                    </Dialog>\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n```\r\n\r\n## API\r\n\r\n#### props.height\r\n\r\n - `Number`\r\n - default: `300`\r\n - Whether overlay is added to dialog or not\r\n\r\n#### props.width\r\n\r\n - `Number`\r\n - default: `500`\r\n - Whether overlay is added to dialog or not\r\n\r\n#### props.modal\r\n\r\n - `Boolean`\r\n - default: `false`\r\n - Whether overlay is added to dialog or not\r\n\r\n#### props.closeOnEscape\r\n\r\n - `Boolean`\r\n - Default: `true`\r\n - If true, the `props.onClose` event will be triggered if user presses Esc key on keyboard.\r\n\r\n#### props.isDraggable\r\n\r\n - `Boolean`\r\n - default: `false`\r\n - Whether dialog is draggable\r\n\r\n#### props.isResizable\r\n\r\n - `Boolean`\r\n - default: `false`\r\n - Whether dialog is resizable\r\n\r\n#### props.title\r\n\r\n - `String` or `ReactElement`\r\n - default: `''`\r\n - Title of dialog box. Could be `string` or some react element.\r\n\r\n#### props.hasCloseIcon\r\n\r\n - `Boolean`\r\n - default: `true`\r\n - Whether close icon is displayed at dialog title\r\n\r\n#### props.allowMinimize\r\n\r\n - `Boolean`\r\n - default: `false`\r\n - Whether dialog can be minimized or not\r\n\r\n#### props.allowMaximize\r\n\r\n - `Boolean`\r\n - default: `false`\r\n - Whether dialog can be maximized (full screen) or not \r\n\r\n#### props.onClose\r\n\r\n - `Function`\r\n - default: `null`\r\n - Function that will be triggered whenever there is a close event.\r\n\r\n#### props.buttons\r\n\r\n ```\r\n    [{\r\n        text: string,\r\n        onClick: Function,\r\n        className: string\r\n    }]\r\n    or\r\n    [ReactElements]\r\n ```\r\n - Default: `null`\r\n - Represents the collection of buttons to be render in dialog footer\r\n\r\n\r\n## License\r\n\r\nMIT\r\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/mohitgupta8888/react-dialog.git"
  },
  "scripts": {
    "lint": "eslint src",
    "lintfix": "eslint src --fix",
    "prepublish": "bash .scripts/prepublish.sh",
    "publish-storybook": "bash .scripts/publish_storybook.sh",
    "storybook": "start-storybook -p 9010",
    "test": "npm run lint && npm run testonly",
    "test-watch": "npm run testonly -- --watch --watch-extensions js",
    "testonly": "mocha --require .scripts/mocha_runner src/**/tests/**/*.js"
  },
  "user": "mohitgupta8888",
  "version": "1.0.2",
  "warnings": [
    {
      "code": "ENOTSUP",
      "required": {
        "npm": "^3.0.0"
      },
      "pkgid": "react-dialog@1.0.2"
    },
    {
      "code": "ENOTSUP",
      "required": {
        "npm": "^3.0.0"
      },
      "pkgid": "react-dialog@1.0.2"
    }
  ]
}
