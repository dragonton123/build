'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.degToRad = exports.scale = exports.dimensions = undefined;

var _d3Scale = require('d3-scale');

/*
  return the chart dimensions
*/
var dimensions = exports.dimensions = function dimensions(_ref) {
  var width = _ref.width,
      height = _ref.height,
      _ref$margin = _ref.margin,
      margin = _ref$margin === undefined ? { height: 0, width: 0 } : _ref$margin;

  var cx = (width - +margin.width / 2) / 2;
  var cy = (height - +margin.height / 2) / 2;
  var radius = Math.min(cx, cy);
  return { cx: cx, cy: cy, radius: radius };
};

/*
  returns an arc scale based on the arc range
*/
var scale = exports.scale = function scale(_ref2) {
  var startAngle = _ref2.startAngle,
      endAngle = _ref2.endAngle,
      _ref2$domain = _ref2.domain,
      domain = _ref2$domain === undefined ? [0, 100] : _ref2$domain;
  return (0, _d3Scale.scaleLinear)().range([startAngle, endAngle]).domain(domain);
};

/*
  Rad to Deg
*/
var degToRad = exports.degToRad = function degToRad() {
  var deg = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;
  return deg * (Math.PI / 180);
};