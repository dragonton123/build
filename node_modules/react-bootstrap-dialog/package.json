{
  "_args": [
    [
      {
        "raw": "react-bootstrap-dialog",
        "scope": null,
        "escapedName": "react-bootstrap-dialog",
        "name": "react-bootstrap-dialog",
        "rawSpec": "",
        "spec": "latest",
        "type": "tag"
      },
      "/home/tadaomin/Project/reactwww"
    ]
  ],
  "_from": "react-bootstrap-dialog@latest",
  "_id": "react-bootstrap-dialog@0.9.2",
  "_inCache": true,
  "_location": "/react-bootstrap-dialog",
  "_nodeVersion": "7.4.0",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/react-bootstrap-dialog-0.9.2.tgz_1506013280948_0.7975045130588114"
  },
  "_npmUser": {
    "name": "akiroom",
    "email": "akiyama@akiroom.com"
  },
  "_npmVersion": "4.0.5",
  "_phantomChildren": {},
  "_requested": {
    "raw": "react-bootstrap-dialog",
    "scope": null,
    "escapedName": "react-bootstrap-dialog",
    "name": "react-bootstrap-dialog",
    "rawSpec": "",
    "spec": "latest",
    "type": "tag"
  },
  "_requiredBy": [
    "#USER",
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/react-bootstrap-dialog/-/react-bootstrap-dialog-0.9.2.tgz",
  "_shasum": "ac7ff95a6d8d9001c88bab4b561368e5f2c39a26",
  "_shrinkwrap": null,
  "_spec": "react-bootstrap-dialog",
  "_where": "/home/tadaomin/Project/reactwww",
  "author": {
    "name": "akiroom",
    "url": "http://akiyama.akiroom.com/en/"
  },
  "bugs": {
    "url": "https://github.com/akiroom/react-bootstrap-dialog/issues"
  },
  "dependencies": {},
  "description": "The modal-dialog React component with React Bootstrap, alternates `window.confirm` and `window.alert`.",
  "devDependencies": {
    "@kadira/storybook-deployer": "^1.2.0",
    "@storybook/addon-actions": "^3.2.6",
    "@storybook/react": "3.2.8",
    "babel-cli": "^6.23.0",
    "babel-core": "^6.23.0",
    "babel-loader": "^6.2.4",
    "babel-plugin-transform-runtime": "^6.23.0",
    "babel-preset-env": "^1.6.0",
    "babel-preset-react": "^6.24.1",
    "babel-runtime": "^6.23.0",
    "bootstrap": "^3.3.7",
    "chai": "^3.5.0",
    "enzyme": "^2.2.0",
    "git-url-parse": "^6.0.1",
    "jsdom": "^8.3.1",
    "mocha": "^2.4.5",
    "react": "^15.6.0",
    "react-addons-test-utils": "^15.0.0",
    "react-bootstrap": "^0.31.3",
    "react-dom": "^15.0.0",
    "sinon": "^1.17.3",
    "standard": "^8.0.0",
    "webpack": "^2.0.0"
  },
  "directories": {},
  "dist": {
    "shasum": "ac7ff95a6d8d9001c88bab4b561368e5f2c39a26",
    "tarball": "https://registry.npmjs.org/react-bootstrap-dialog/-/react-bootstrap-dialog-0.9.2.tgz"
  },
  "engines": {
    "npm": "^3.0.0"
  },
  "gitHead": "3005ad7b4ca90df30c7fc277b41fff890ba0c848",
  "homepage": "https://github.com/akiroom/react-bootstrap-dialog#readme",
  "keywords": [
    "react",
    "bootstrap",
    "react-component",
    "react-bootstrap",
    "dialog",
    "alert",
    "confirm",
    "modal"
  ],
  "license": "MIT",
  "main": "dist/index.js",
  "maintainers": [
    {
      "name": "akiroom",
      "email": "akiyama@akiroom.com"
    }
  ],
  "name": "react-bootstrap-dialog",
  "optionalDependencies": {},
  "peerDependencies": {
    "react-bootstrap": "^0.31.3"
  },
  "readme": "# React Bootstrap Dialog\n\n[![npm version](https://badge.fury.io/js/react-bootstrap-dialog.svg)](https://badge.fury.io/js/react-bootstrap-dialog)\n[![Build Status](https://travis-ci.org/akiroom/react-bootstrap-dialog.svg?branch=master)](https://travis-ci.org/akiroom/react-bootstrap-dialog)\n\nIt's a **Modal-dialog React component** based on `<Modal />` in [react-bootstrap](https://react-bootstrap.github.io/), It's configurable and easy to use instead of `window.alert` or `window.confirm` in your React application.\n\nIndex:\n\n- [Screenshots](#screenshots)\n- [Demo and Sample](#demo-and-sample)\n- [Usage](#usage)\n- [Documents](#documents)\n\n## Screenshots\n\n| Default Alert | Default Dialog | Custom Dialog |\n|---------------|----------------|---------------|\n| Instead of `window.alert` | Instead of `window.confirm` | Full customized |\n| [![https://gyazo.com/84e315aca42ac4dbe39e51ce3451bb53](https://i.gyazo.com/84e315aca42ac4dbe39e51ce3451bb53.gif)](https://gyazo.com/84e315aca42ac4dbe39e51ce3451bb53) | [![https://gyazo.com/f8e8bfd41d9c652a55ed06a0828dc57e](https://i.gyazo.com/f8e8bfd41d9c652a55ed06a0828dc57e.gif)](https://gyazo.com/f8e8bfd41d9c652a55ed06a0828dc57e) | [![https://gyazo.com/d9c073c6c7d66c05e5398f386345f452](https://i.gyazo.com/d9c073c6c7d66c05e5398f386345f452.gif)](https://gyazo.com/d9c073c6c7d66c05e5398f386345f452) |\n\n## Demo and Sample\n\n- See [Demos on storybook](https://akiroom.github.io/react-bootstrap-dialog/)\n- The sample codes are in [/src/stories/samples](https://github.com/akiroom/react-bootstrap-dialog/tree/master/src/stories/samples)\n\n## Usage\n\n### Install\n\n```sh\nnpm i react-bootstrap-dialog --save\n```\n\n### Quick start\n\nStep 1. Import package.\n\n```js\nimport Dialog from 'react-bootstrap-dialog'\n```\n\nStep 2. Write jsx in `render` method.\n\n```html\n<Dialog ref={(el) => { this.dialog = el }} />\n```\n\nStep 3. Call `showAlert` method or `show` method.\n\n```js\nthis.dialog.showAlert('Hello Dialog!')\n```\n\nThis code is full code for these steps.\n\n```js\nimport React from 'react'\nimport {Button} from 'react-bootstrap'\nimport Dialog from 'react-bootstrap-dialog'\n\nexport default class SampleCode extends React.Component {\n  constructor () {\n    super()\n    this.onClick = this.onClick.bind(this)\n  }\n\n  onClick () {\n    this.dialog.showAlert('Hello Dialog!')\n  }\n\n  render () {\n    return (\n      <div>\n        <Button onClick={this.onClick}>Show alert</Button>\n        <Dialog ref={(el) => { this.dialog = el }} />\n      </div>\n    )\n  }\n}\n\n```\n\n## Documents\n\nIndex:\n\n- [`Dialog`](#dialog)\n- [`<Dialog />`](#dialog-)\n- [`DialogAction` generators](#dialogaction-generators)\n\n### `Dialog`\n\n#### setOptions(options)\n\nSet default options for applying to all dialogs\n\n- `options`: [Object] The parameters for default options.\n  - `defaultOkLabel`: [String, Node] The default label for OK button. Default is `'OK'`.\n  - `defaultCancelLabel`: [String, Node] The default label for Cancel button. Default is `'Cancel'`.\n  - `primaryClassName`: [String] The class name for primary button. Default is `'btn-primary'`\n\n##### Example\n\n```js\nDialog.setOptions({\n  defaultOkLabel: 'Yes! Yes! Yes!',\n  defaultCancelLabel: 'Noooooooo!!',\n  primaryClassName: 'btn-success'\n})\n```\n\n#### resetOptions()\n\nReset default options to presets.\n\n##### Example\n\n```js\nDialog.resetOptions()\n```\n\n### `<Dialog />`\n\n#### show(options)\n\nShow dialog with choices. This is similar to `window.confirm`.\n\n- `options`: [Object] The parameters for options.\n   - `title`: [String, Node] The title of dialog.\n   - `body`: [String, Node] The body of message.\n   - `actions`: [Array[DialogAction]] The choices for presenting to user. See [DialogAction generators](#dialogaction-generators)\n   - `bsSize`: [String] The width size for dialog. You can choose in [null, 'medium', 'large', 'small'].\n   - `onHide`: [Function] The method to call when the dialog was closed by clicking background.\n\n##### Example\n\n```js\nthis.dialog.show({\n  title: 'Greedings',\n  body: 'How are you?',\n  actions: [\n    Dialog.CancelAction(),\n    Dialog.OKAction()\n  ],\n  bsSize: 'small',\n  onHide: (dialog) => {\n    dialog.hide()\n    console.log('closed by clicking background.')\n  }\n})\n```\n\n#### showAlert(body, bsSize = undefined)\n\nShow message dialog This is similar to `window.alert`.\n\n- `body`: [String, Node] The body of message.\n- `bsSize`: [String] The width size for dialog. You can choose in [null, 'medium', 'large', 'small'].\n\n##### Example\n\n```js\nthis.dialog.showAlert('Hello world!')\n```\n\n#### hide()\n\nHide this dialog.\n\n##### Example\n\n```js\nthis.dialog.hide()\n```\n\n### `DialogAction` generators\n\n#### Dialog.Action(label, func, className)\n\nThe customized choice for `options.actions` in `dialog.show`.\n\n- `label`: [String, Node] The label for the button.\n- `func`: [Function] The method to call when the button is clicked.\n- `className`: The class name for the button.\n\n##### Example\n\n```js\nDialog.Action(\n  'Hello',\n  () => console.log('Hello!'),\n  'btn-info'\n)\n```\n\n#### Dialog.DefaultAction(label, func, className)\n\nThe default choice for `options.actions` in `dialog.show`.\n\n- `label`: [String, Node] The label for the button.\n- `func`: [Function] The method to call when the button is clicked.\n- `className`: The class name for the button. (Default is `'btn-primary'`)\n\n##### Example\n\n```js\nDialog.DefaultAction(\n  'Remove',\n  () => {\n    console.log('Remove action will be executed!')\n  },\n  'btn-danger'\n)\n```\n\n#### Dialog.OKAction(func)\n\nThe OK choice for `options.actions` in `dialog.show`.\nIt uses default ok label (`'OK'`) and default primary class (`'btn-primary'`).\n\n- `func`: [Function] The method to call when the button is clicked.\n\n##### Example\n\n```js\nDialog.OKAction(() => {\n  console.log('OK was clicked!')\n})\n```\n\n#### Dialog.CancelAction(func)\n\nThe Cancel choice for `options.actions` in `dialog.show`.\nIt uses default cancel label (`'Cancel'`).\n\n- `func`: [Function] The method to call when the button is clicked.\n\n##### Example 1\n\n```js\nDialog.CancelAction(() => {\n  console.log('Cancel was clicked!')\n})\n```\n\n##### Example 2\n\n```js\n// Do nothing.\nDialog.CancelAction()\n```\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/akiroom/react-bootstrap-dialog.git"
  },
  "scripts": {
    "deploy-storybook": "storybook-to-ghpages",
    "lint": "standard",
    "prepublish": ". ./.scripts/prepublish.sh",
    "publish-storybook": "bash .scripts/publish_storybook.sh",
    "storybook": "start-storybook -p 9010",
    "test": "npm run lint && npm run testonly",
    "test-watch": "npm run testonly -- --watch --watch-extensions js",
    "testonly": "mocha --require .scripts/mocha_runner src/**/tests/**/*.js"
  },
  "version": "0.9.2",
  "warnings": [
    {
      "code": "ENOTSUP",
      "required": {
        "npm": "^3.0.0"
      },
      "pkgid": "react-bootstrap-dialog@0.9.2"
    },
    {
      "code": "ENOTSUP",
      "required": {
        "npm": "^3.0.0"
      },
      "pkgid": "react-bootstrap-dialog@0.9.2"
    }
  ]
}
